tests/cases/compiler/higherKindedTypesLift2.ts(82,7): error TS2322: Type 'Functor<any, any, any>' is not assignable to type 'FunctorFoo<EndVal>'.
  Property 'fooVal' is missing in type 'Functor<any, any, any>'.
tests/cases/compiler/higherKindedTypesLift2.ts(89,51): error TS2345: Argument of type 'FunctorFoo<StartVal>' is not assignable to parameter of type 'Functor<CX, AX, AXBound>'.
  Types of property 'map' are incompatible.
    Type '<BFoo>(fmapfoo: FMap<StartVal, BFoo>) => FunctorFoo<BFoo>' is not assignable to type '<BX>(fmapx: (fmapxax: AX) => BX) => CX'.
      Types of parameters 'fmapfoo' and 'fmapx' are incompatible.
        Types of parameters 'fmapxax' and 'fmapfa' are incompatible.
          Type 'StartVal' is not assignable to type 'AX'.
tests/cases/compiler/higherKindedTypesLift2.ts(90,7): error TS2322: Type 'Functor<CX, AX, AXBound>' is not assignable to type 'FunctorFoo<EndVal>'.
  Property 'fooVal' is missing in type 'Functor<CX, AX, AXBound>'.


==== tests/cases/compiler/higherKindedTypesLift2.ts (3 errors) ====
    export interface FMap<FA, FB> {
        (fmapfa: FA): FB
    }
    
    interface Bounded<
        BC<_BCT> extends Bound<BC, _BCT>,
        Bound<
            _BC<__BCT>,
            _BT
        >,
        BT extends BTBound,
        BTBound = BT
    > {}
    
    interface Functor<CX<_TX extends AXBound> extends Functor<CX, AX, AXBound>, AX extends AXBound, AXBound = AX> extends Bounded<CX, Functor, AX, AXBound> {
        map<BX>(fmapx: (fmapxax: AX) => BX): CX<BX>;
    }
    
    interface FunctorFoo<AFoo> extends Functor<FunctorFoo, AFoo> {
        map<BFoo>(fmapfoo: FMap<AFoo, BFoo>): FunctorFoo<BFoo>;
        fooVal: AFoo
    }
    
    interface StaticFunctor<
        SC<_T extends SCTBound> extends SCBound<SC, _T> & Bounded<SC, SCBound, _T, SCTBound>,
        SCBound<
         _BC<__BCT>,
         _BT
        >,
        SCTBound = {}
    > {
        <AS, BS>(fa2: SC<AS>, fmap2: FMap<AS,BS>): SC<BS>
    }
    
    
    declare function staticMap<C1<_T1 extends T1Bound> extends Functor<C1, T1Bound, T1Bound>, T1Bound, A1, B1>(fa1: C1<A1>, fmap1: FMap<A1, B1>): C1<B1>;
    
    
    interface LiftedResult<
        LC<_LT extends LRTBound> extends LRCBound<LC, _LT> & Bounded<LC, LRCBound, _LT, LRTBound>,
        LRCBound<
        _BC<__BCT>,
        _BT
       >,
       LRTBound 
    > {
        <LA, LB>(lmap: FMap<LA,LB>): LiftedResult2<LC, LA, LB, LRCBound>
    }
    
    interface LiftedResult2<
        LC2<_LT extends LA2 | LB2> extends LRC2Bound<LC2, _LT> & Bounded<LC2, LRC2Bound, _LT, LA2 | LB2>, 
        LA2,
        LB2,
        LRC2Bound<
            _BC<__BCT>,
            _BT
        >,
        > extends FMap<LC2<LA2>, LC2<LB2>>{}
    
    declare function lift<
        C<_T extends ActTBound> extends ActBound & Bounded<C, ActBound, _T, ActTBound>,
        ActBound,
        ActTBound
    >
    (fToLift: StaticFunctor<C, ActBound, ActTBound>): LiftedResult<C, ActBound, ActTBound>
    
    interface StartVal {
        startVal: string
    }
    
    interface EndVal {
        endVal: number
    }
    
    
    declare const fooObj: FunctorFoo<StartVal>
    declare function stringLength(strarg: StartVal): EndVal
    
    const liftedStaticMap = lift(staticMap);
    const liftedStringLength = liftedStaticMap(stringLength);
    const result = liftedStringLength(fooObj);
    const expectedType: FunctorFoo<EndVal> = result;
          ~~~~~~~~~~~~
!!! error TS2322: Type 'Functor<any, any, any>' is not assignable to type 'FunctorFoo<EndVal>'.
!!! error TS2322:   Property 'fooVal' is missing in type 'Functor<any, any, any>'.
    const expectError = liftedStringLength(result)
    
    
    declare const declaredStaticFunctor: StaticFunctor<Functor, Functor>
    const liftedDeclaredStaticFunctor = lift(declaredStaticFunctor);
    const liftedDeclaredStringLength = liftedDeclaredStaticFunctor(stringLength)
    const declaredResult = liftedDeclaredStringLength(fooObj);
                                                      ~~~~~~
!!! error TS2345: Argument of type 'FunctorFoo<StartVal>' is not assignable to parameter of type 'Functor<CX, AX, AXBound>'.
!!! error TS2345:   Types of property 'map' are incompatible.
!!! error TS2345:     Type '<BFoo>(fmapfoo: FMap<StartVal, BFoo>) => FunctorFoo<BFoo>' is not assignable to type '<BX>(fmapx: (fmapxax: AX) => BX) => CX'.
!!! error TS2345:       Types of parameters 'fmapfoo' and 'fmapx' are incompatible.
!!! error TS2345:         Types of parameters 'fmapxax' and 'fmapfa' are incompatible.
!!! error TS2345:           Type 'StartVal' is not assignable to type 'AX'.
    const expectedTypeDeclared: FunctorFoo<EndVal> = declaredResult;
          ~~~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'Functor<CX, AX, AXBound>' is not assignable to type 'FunctorFoo<EndVal>'.
!!! error TS2322:   Property 'fooVal' is missing in type 'Functor<CX, AX, AXBound>'.
    const expectErrorDeclared = liftedDeclaredStringLength(declaredResult)
    