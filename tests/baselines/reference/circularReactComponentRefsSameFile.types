=== tests/cases/compiler/circularReactComponentRefsSameFile.tsx ===
import * as React from "react";
>React : typeof React

declare function create<T extends React.ComponentClass<any>>(arg: {
>create : <T extends React.ComponentClass<any>>(arg: { comp: T; }) => React.ComponentClass<any>
>T : T
>React : any
>ComponentClass : React.ComponentClass<P>
>arg : { comp: T; }

  comp: T;
>comp : T
>T : T

}): React.ComponentClass<any>;
>React : any
>ComponentClass : React.ComponentClass<P>

class MyComponent extends React.Component<any, any> {
>MyComponent : MyComponent
>React.Component : React.Component<any, any>
>React : typeof React
>Component : typeof React.Component

  render() {
>render : () => JSX.Element

    return (
>(      <div>        <GeneratedComp />      </div>    ) : JSX.Element

      <div>
><div>        <GeneratedComp />      </div> : JSX.Element
>div : any

        <GeneratedComp />
><GeneratedComp /> : JSX.Element
>GeneratedComp : React.ComponentClass<any>

      </div>
>div : any

    );
  }
}

const GeneratedComp = create({
>GeneratedComp : React.ComponentClass<any>
>create({  comp: MyComponent}) : React.ComponentClass<any>
>create : <T extends React.ComponentClass<any>>(arg: { comp: T; }) => React.ComponentClass<any>
>{  comp: MyComponent} : { comp: typeof MyComponent; }

  comp: MyComponent
>comp : typeof MyComponent
>MyComponent : typeof MyComponent

});

