tests/cases/compiler/file1.tsx(8,14): error TS7022: 'GeneratedComp' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
tests/cases/compiler/mycomp.tsx(5,3): error TS7023: 'render' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.


==== tests/cases/compiler/mycomp.tsx (1 errors) ====
    import * as React from "react";
    import { GeneratedComp } from "./file1";
    
    export class MyComponent extends React.Component<any, any> {
      render() {
      ~~~~~~
!!! error TS7023: 'render' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.
        return (
          <div>
            <GeneratedComp />
          </div>
        );
      }
    }
    
==== tests/cases/compiler/file1.tsx (1 errors) ====
    import * as React from "react";
    import { MyComponent } from "./mycomp";
    
    declare function create<T extends React.ComponentClass<any>>(arg: {
      comp: T;
    }): React.ComponentClass<any>;
    
    export const GeneratedComp = create({
                 ~~~~~~~~~~~~~
!!! error TS7022: 'GeneratedComp' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
      comp: MyComponent
    });
    