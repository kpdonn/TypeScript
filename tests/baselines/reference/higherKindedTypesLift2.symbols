=== tests/cases/compiler/higherKindedTypesLift2.ts ===
interface StartVal {
>StartVal : Symbol(StartVal, Decl(higherKindedTypesLift2.ts, 0, 0))

    startVal: string
>startVal : Symbol(StartVal.startVal, Decl(higherKindedTypesLift2.ts, 0, 20))
}

interface EndVal {
>EndVal : Symbol(EndVal, Decl(higherKindedTypesLift2.ts, 2, 1))

    endVal: number
>endVal : Symbol(EndVal.endVal, Decl(higherKindedTypesLift2.ts, 4, 18))
}

declare function testFunc(strarg: StartVal): EndVal
>testFunc : Symbol(testFunc, Decl(higherKindedTypesLift2.ts, 6, 1))
>strarg : Symbol(strarg, Decl(higherKindedTypesLift2.ts, 8, 26))
>StartVal : Symbol(StartVal, Decl(higherKindedTypesLift2.ts, 0, 0))
>EndVal : Symbol(EndVal, Decl(higherKindedTypesLift2.ts, 2, 1))

export interface FMap<FA, FB> {
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>FA : Symbol(FA, Decl(higherKindedTypesLift2.ts, 10, 22))
>FB : Symbol(FB, Decl(higherKindedTypesLift2.ts, 10, 25))

    (fmapfa: FA): FB
>fmapfa : Symbol(fmapfa, Decl(higherKindedTypesLift2.ts, 11, 5))
>FA : Symbol(FA, Decl(higherKindedTypesLift2.ts, 10, 22))
>FB : Symbol(FB, Decl(higherKindedTypesLift2.ts, 10, 25))
}

interface Bounded<
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))

    BC<_BCT extends BTBound> extends Bound<BC, _BCT, BTBound>,
>BC : Symbol(BC, Decl(higherKindedTypesLift2.ts, 14, 18))
>_BCT : Symbol(_BCT, Decl(higherKindedTypesLift2.ts, 15, 7))
>BTBound : Symbol(BTBound, Decl(higherKindedTypesLift2.ts, 21, 23))
>Bound : Symbol(Bound, Decl(higherKindedTypesLift2.ts, 15, 62))
>BC : Symbol(BC, Decl(higherKindedTypesLift2.ts, 14, 18))
>_BCT : Symbol(_BCT, Decl(higherKindedTypesLift2.ts, 15, 7))
>BTBound : Symbol(BTBound, Decl(higherKindedTypesLift2.ts, 21, 23))

    Bound<
>Bound : Symbol(Bound, Decl(higherKindedTypesLift2.ts, 15, 62))

        _BC<__BCT>,
>_BC : Symbol(_BC, Decl(higherKindedTypesLift2.ts, 16, 10))
>__BCT : Symbol(__BCT, Decl(higherKindedTypesLift2.ts, 17, 12))

        _BT,
>_BT : Symbol(_BT, Decl(higherKindedTypesLift2.ts, 17, 19))

        _BTB
>_BTB : Symbol(_BTB, Decl(higherKindedTypesLift2.ts, 18, 12))

    >,
    BT extends BTBound,
>BT : Symbol(BT, Decl(higherKindedTypesLift2.ts, 20, 6))
>BTBound : Symbol(BTBound, Decl(higherKindedTypesLift2.ts, 21, 23))

    BTBound
>BTBound : Symbol(BTBound, Decl(higherKindedTypesLift2.ts, 21, 23))

> {}

interface Functor<
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))

    CX<_TX extends _TXB, _TXB = {}> extends Functor<CX, _TX, _TXB>,
>CX : Symbol(CX, Decl(higherKindedTypesLift2.ts, 25, 18))
>_TX : Symbol(_TX, Decl(higherKindedTypesLift2.ts, 26, 7))
>_TXB : Symbol(_TXB, Decl(higherKindedTypesLift2.ts, 26, 24))
>_TXB : Symbol(_TXB, Decl(higherKindedTypesLift2.ts, 26, 24))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))
>CX : Symbol(CX, Decl(higherKindedTypesLift2.ts, 25, 18))
>_TX : Symbol(_TX, Decl(higherKindedTypesLift2.ts, 26, 7))
>_TXB : Symbol(_TXB, Decl(higherKindedTypesLift2.ts, 26, 24))

    AX extends AXBound,
>AX : Symbol(AX, Decl(higherKindedTypesLift2.ts, 26, 67))
>AXBound : Symbol(AXBound, Decl(higherKindedTypesLift2.ts, 27, 23))

    AXBound
>AXBound : Symbol(AXBound, Decl(higherKindedTypesLift2.ts, 27, 23))

    > 
        extends Bounded<CX, Functor, AX, AXBound> {
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))
>CX : Symbol(CX, Decl(higherKindedTypesLift2.ts, 25, 18))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))
>AX : Symbol(AX, Decl(higherKindedTypesLift2.ts, 26, 67))
>AXBound : Symbol(AXBound, Decl(higherKindedTypesLift2.ts, 27, 23))

    functorMap<BX extends AXBound>(fmapx: FMap<AX, BX>): CX<BX>;
>functorMap : Symbol(Functor.functorMap, Decl(higherKindedTypesLift2.ts, 30, 51))
>BX : Symbol(BX, Decl(higherKindedTypesLift2.ts, 31, 15))
>AXBound : Symbol(AXBound, Decl(higherKindedTypesLift2.ts, 27, 23))
>fmapx : Symbol(fmapx, Decl(higherKindedTypesLift2.ts, 31, 35))
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>AX : Symbol(AX, Decl(higherKindedTypesLift2.ts, 26, 67))
>BX : Symbol(BX, Decl(higherKindedTypesLift2.ts, 31, 15))
>CX : Symbol(CX, Decl(higherKindedTypesLift2.ts, 25, 18))
>BX : Symbol(BX, Decl(higherKindedTypesLift2.ts, 31, 15))
}

interface StaticFunctor<
>StaticFunctor : Symbol(StaticFunctor, Decl(higherKindedTypesLift2.ts, 32, 1))

    SC<_T extends _TB, _TB = {}> extends SCBound<SC, _T, _TB> & Bounded<SC, SCBound, _T, _TB>,
>SC : Symbol(SC, Decl(higherKindedTypesLift2.ts, 34, 24))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 35, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 35, 22))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 35, 22))
>SCBound : Symbol(SCBound, Decl(higherKindedTypesLift2.ts, 35, 94))
>SC : Symbol(SC, Decl(higherKindedTypesLift2.ts, 34, 24))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 35, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 35, 22))
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))
>SC : Symbol(SC, Decl(higherKindedTypesLift2.ts, 34, 24))
>SCBound : Symbol(SCBound, Decl(higherKindedTypesLift2.ts, 35, 94))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 35, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 35, 22))

    SCBound<
>SCBound : Symbol(SCBound, Decl(higherKindedTypesLift2.ts, 35, 94))

     _BC<__BCT>,
>_BC : Symbol(_BC, Decl(higherKindedTypesLift2.ts, 36, 12))
>__BCT : Symbol(__BCT, Decl(higherKindedTypesLift2.ts, 37, 9))

     _BT,
>_BT : Symbol(_BT, Decl(higherKindedTypesLift2.ts, 37, 16))

     _BTB
>_BTB : Symbol(_BTB, Decl(higherKindedTypesLift2.ts, 38, 9))

    >,
    SCTBound = {}
>SCTBound : Symbol(SCTBound, Decl(higherKindedTypesLift2.ts, 40, 6))

> {
    <AS extends SCTBound, BS extends SCTBound>(fa2: SC<AS>, fmap2: FMap<AS,BS>): SC<BS>
>AS : Symbol(AS, Decl(higherKindedTypesLift2.ts, 43, 5))
>SCTBound : Symbol(SCTBound, Decl(higherKindedTypesLift2.ts, 40, 6))
>BS : Symbol(BS, Decl(higherKindedTypesLift2.ts, 43, 25))
>SCTBound : Symbol(SCTBound, Decl(higherKindedTypesLift2.ts, 40, 6))
>fa2 : Symbol(fa2, Decl(higherKindedTypesLift2.ts, 43, 47))
>SC : Symbol(SC, Decl(higherKindedTypesLift2.ts, 34, 24))
>AS : Symbol(AS, Decl(higherKindedTypesLift2.ts, 43, 5))
>fmap2 : Symbol(fmap2, Decl(higherKindedTypesLift2.ts, 43, 59))
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>AS : Symbol(AS, Decl(higherKindedTypesLift2.ts, 43, 5))
>BS : Symbol(BS, Decl(higherKindedTypesLift2.ts, 43, 25))
>SC : Symbol(SC, Decl(higherKindedTypesLift2.ts, 34, 24))
>BS : Symbol(BS, Decl(higherKindedTypesLift2.ts, 43, 25))
}


declare function lift<
>lift : Symbol(lift, Decl(higherKindedTypesLift2.ts, 44, 1))

    C<_T extends _TB, _TB = {}> extends ActBound<C, _T, _TB> & Bounded<C, ActBound, _T, _TB>,
>C : Symbol(C, Decl(higherKindedTypesLift2.ts, 47, 22))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 48, 6))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 48, 21))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 48, 21))
>ActBound : Symbol(ActBound, Decl(higherKindedTypesLift2.ts, 48, 93))
>C : Symbol(C, Decl(higherKindedTypesLift2.ts, 47, 22))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 48, 6))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 48, 21))
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))
>C : Symbol(C, Decl(higherKindedTypesLift2.ts, 47, 22))
>ActBound : Symbol(ActBound, Decl(higherKindedTypesLift2.ts, 48, 93))
>_T : Symbol(_T, Decl(higherKindedTypesLift2.ts, 48, 6))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 48, 21))

    ActBound<
>ActBound : Symbol(ActBound, Decl(higherKindedTypesLift2.ts, 48, 93))

    _BC<__BCT>,
>_BC : Symbol(_BC, Decl(higherKindedTypesLift2.ts, 49, 13))
>__BCT : Symbol(__BCT, Decl(higherKindedTypesLift2.ts, 50, 8))

    _BT,
>_BT : Symbol(_BT, Decl(higherKindedTypesLift2.ts, 50, 15))

    _BTB
>_BTB : Symbol(_BTB, Decl(higherKindedTypesLift2.ts, 51, 8))

   >,
    ActTBound
>ActTBound : Symbol(ActTBound, Decl(higherKindedTypesLift2.ts, 53, 5))

>
(fToLift: StaticFunctor<C, ActBound, ActTBound>): LiftedResult<C, ActBound, ActTBound>
>fToLift : Symbol(fToLift, Decl(higherKindedTypesLift2.ts, 56, 1))
>StaticFunctor : Symbol(StaticFunctor, Decl(higherKindedTypesLift2.ts, 32, 1))
>C : Symbol(C, Decl(higherKindedTypesLift2.ts, 47, 22))
>ActBound : Symbol(ActBound, Decl(higherKindedTypesLift2.ts, 48, 93))
>ActTBound : Symbol(ActTBound, Decl(higherKindedTypesLift2.ts, 53, 5))
>LiftedResult : Symbol(LiftedResult, Decl(higherKindedTypesLift2.ts, 56, 86))
>C : Symbol(C, Decl(higherKindedTypesLift2.ts, 47, 22))
>ActBound : Symbol(ActBound, Decl(higherKindedTypesLift2.ts, 48, 93))
>ActTBound : Symbol(ActTBound, Decl(higherKindedTypesLift2.ts, 53, 5))


interface LiftedResult<
>LiftedResult : Symbol(LiftedResult, Decl(higherKindedTypesLift2.ts, 56, 86))

    LC<_LT extends _TB, _TB = {}> extends LRCBound<LC, _LT, _TB> & Bounded<LC, LRCBound, _LT, _TB>,
>LC : Symbol(LC, Decl(higherKindedTypesLift2.ts, 59, 23))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 60, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 60, 23))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 60, 23))
>LRCBound : Symbol(LRCBound, Decl(higherKindedTypesLift2.ts, 60, 99))
>LC : Symbol(LC, Decl(higherKindedTypesLift2.ts, 59, 23))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 60, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 60, 23))
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))
>LC : Symbol(LC, Decl(higherKindedTypesLift2.ts, 59, 23))
>LRCBound : Symbol(LRCBound, Decl(higherKindedTypesLift2.ts, 60, 99))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 60, 7))
>_TB : Symbol(_TB, Decl(higherKindedTypesLift2.ts, 60, 23))

    LRCBound<
>LRCBound : Symbol(LRCBound, Decl(higherKindedTypesLift2.ts, 60, 99))

    _BC<__BCT>,
>_BC : Symbol(_BC, Decl(higherKindedTypesLift2.ts, 61, 13))
>__BCT : Symbol(__BCT, Decl(higherKindedTypesLift2.ts, 62, 8))

    _BT,
>_BT : Symbol(_BT, Decl(higherKindedTypesLift2.ts, 62, 15))

    _BTB
>_BTB : Symbol(_BTB, Decl(higherKindedTypesLift2.ts, 63, 8))

   >,
   LRTBound 
>LRTBound : Symbol(LRTBound, Decl(higherKindedTypesLift2.ts, 65, 5))

> {
    <LA, LB>(lmap: FMap<LA,LB>): LiftedResult2<LC, LA, LB, LRCBound>
>LA : Symbol(LA, Decl(higherKindedTypesLift2.ts, 68, 5))
>LB : Symbol(LB, Decl(higherKindedTypesLift2.ts, 68, 8))
>lmap : Symbol(lmap, Decl(higherKindedTypesLift2.ts, 68, 13))
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>LA : Symbol(LA, Decl(higherKindedTypesLift2.ts, 68, 5))
>LB : Symbol(LB, Decl(higherKindedTypesLift2.ts, 68, 8))
>LiftedResult2 : Symbol(LiftedResult2, Decl(higherKindedTypesLift2.ts, 69, 1))
>LC : Symbol(LC, Decl(higherKindedTypesLift2.ts, 59, 23))
>LA : Symbol(LA, Decl(higherKindedTypesLift2.ts, 68, 5))
>LB : Symbol(LB, Decl(higherKindedTypesLift2.ts, 68, 8))
>LRCBound : Symbol(LRCBound, Decl(higherKindedTypesLift2.ts, 60, 99))
}

interface LiftedResult2<
>LiftedResult2 : Symbol(LiftedResult2, Decl(higherKindedTypesLift2.ts, 69, 1))

    LC2<_LT extends LA2 | LB2> extends LRC2Bound<LC2, _LT,  LA2 | LB2> & Bounded<LC2, LRC2Bound, _LT, LA2 | LB2>, 
>LC2 : Symbol(LC2, Decl(higherKindedTypesLift2.ts, 71, 24))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 72, 8))
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))
>LRC2Bound : Symbol(LRC2Bound, Decl(higherKindedTypesLift2.ts, 74, 8))
>LC2 : Symbol(LC2, Decl(higherKindedTypesLift2.ts, 71, 24))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 72, 8))
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))
>Bounded : Symbol(Bounded, Decl(higherKindedTypesLift2.ts, 12, 1))
>LC2 : Symbol(LC2, Decl(higherKindedTypesLift2.ts, 71, 24))
>LRC2Bound : Symbol(LRC2Bound, Decl(higherKindedTypesLift2.ts, 74, 8))
>_LT : Symbol(_LT, Decl(higherKindedTypesLift2.ts, 72, 8))
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))

    LA2,
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))

    LB2,
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))

    LRC2Bound<
>LRC2Bound : Symbol(LRC2Bound, Decl(higherKindedTypesLift2.ts, 74, 8))

        _BC<__BCT>,
>_BC : Symbol(_BC, Decl(higherKindedTypesLift2.ts, 75, 14))
>__BCT : Symbol(__BCT, Decl(higherKindedTypesLift2.ts, 76, 12))

        _BT,
>_BT : Symbol(_BT, Decl(higherKindedTypesLift2.ts, 76, 19))

        _BTB
>_BTB : Symbol(_BTB, Decl(higherKindedTypesLift2.ts, 77, 12))

    >,
    > {
        <FinalC<_FT extends LA2 | LB2> extends LC2<_FT>>(lc2la2: FinalC<LA2>): FinalC<LB2>
>FinalC : Symbol(FinalC, Decl(higherKindedTypesLift2.ts, 81, 9))
>_FT : Symbol(_FT, Decl(higherKindedTypesLift2.ts, 81, 16))
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))
>LC2 : Symbol(LC2, Decl(higherKindedTypesLift2.ts, 71, 24))
>_FT : Symbol(_FT, Decl(higherKindedTypesLift2.ts, 81, 16))
>lc2la2 : Symbol(lc2la2, Decl(higherKindedTypesLift2.ts, 81, 57))
>FinalC : Symbol(FinalC, Decl(higherKindedTypesLift2.ts, 81, 9))
>LA2 : Symbol(LA2, Decl(higherKindedTypesLift2.ts, 72, 113))
>FinalC : Symbol(FinalC, Decl(higherKindedTypesLift2.ts, 81, 9))
>LB2 : Symbol(LB2, Decl(higherKindedTypesLift2.ts, 73, 8))
    }

declare function staticMap<C1<_T1 extends _T1B, _T1B = {}> extends Functor<C1, _T1, _T1B>, T1Bound, A1 extends T1Bound, B1 extends T1Bound>(fa1: C1<A1>, fmap1: FMap<A1, B1>): C1<B1>;
>staticMap : Symbol(staticMap, Decl(higherKindedTypesLift2.ts, 82, 5))
>C1 : Symbol(C1, Decl(higherKindedTypesLift2.ts, 84, 27))
>_T1 : Symbol(_T1, Decl(higherKindedTypesLift2.ts, 84, 30))
>_T1B : Symbol(_T1B, Decl(higherKindedTypesLift2.ts, 84, 47))
>_T1B : Symbol(_T1B, Decl(higherKindedTypesLift2.ts, 84, 47))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))
>C1 : Symbol(C1, Decl(higherKindedTypesLift2.ts, 84, 27))
>_T1 : Symbol(_T1, Decl(higherKindedTypesLift2.ts, 84, 30))
>_T1B : Symbol(_T1B, Decl(higherKindedTypesLift2.ts, 84, 47))
>T1Bound : Symbol(T1Bound, Decl(higherKindedTypesLift2.ts, 84, 90))
>A1 : Symbol(A1, Decl(higherKindedTypesLift2.ts, 84, 99))
>T1Bound : Symbol(T1Bound, Decl(higherKindedTypesLift2.ts, 84, 90))
>B1 : Symbol(B1, Decl(higherKindedTypesLift2.ts, 84, 119))
>T1Bound : Symbol(T1Bound, Decl(higherKindedTypesLift2.ts, 84, 90))
>fa1 : Symbol(fa1, Decl(higherKindedTypesLift2.ts, 84, 140))
>C1 : Symbol(C1, Decl(higherKindedTypesLift2.ts, 84, 27))
>A1 : Symbol(A1, Decl(higherKindedTypesLift2.ts, 84, 99))
>fmap1 : Symbol(fmap1, Decl(higherKindedTypesLift2.ts, 84, 152))
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>A1 : Symbol(A1, Decl(higherKindedTypesLift2.ts, 84, 99))
>B1 : Symbol(B1, Decl(higherKindedTypesLift2.ts, 84, 119))
>C1 : Symbol(C1, Decl(higherKindedTypesLift2.ts, 84, 27))
>B1 : Symbol(B1, Decl(higherKindedTypesLift2.ts, 84, 119))


interface FunctorFoo<AFoo> extends Functor<FunctorFoo, AFoo, {}> {
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>AFoo : Symbol(AFoo, Decl(higherKindedTypesLift2.ts, 87, 21))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>AFoo : Symbol(AFoo, Decl(higherKindedTypesLift2.ts, 87, 21))

    functorMap<BFoo>(fmapfoo: FMap<AFoo, BFoo>): FunctorFoo<BFoo>;
>functorMap : Symbol(FunctorFoo.functorMap, Decl(higherKindedTypesLift2.ts, 87, 66))
>BFoo : Symbol(BFoo, Decl(higherKindedTypesLift2.ts, 88, 15))
>fmapfoo : Symbol(fmapfoo, Decl(higherKindedTypesLift2.ts, 88, 21))
>FMap : Symbol(FMap, Decl(higherKindedTypesLift2.ts, 8, 51))
>AFoo : Symbol(AFoo, Decl(higherKindedTypesLift2.ts, 87, 21))
>BFoo : Symbol(BFoo, Decl(higherKindedTypesLift2.ts, 88, 15))
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>BFoo : Symbol(BFoo, Decl(higherKindedTypesLift2.ts, 88, 15))

    fooVal: AFoo
>fooVal : Symbol(FunctorFoo.fooVal, Decl(higherKindedTypesLift2.ts, 88, 66))
>AFoo : Symbol(AFoo, Decl(higherKindedTypesLift2.ts, 87, 21))
}

declare const fooObj: FunctorFoo<StartVal>
>fooObj : Symbol(fooObj, Decl(higherKindedTypesLift2.ts, 92, 13))
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>StartVal : Symbol(StartVal, Decl(higherKindedTypesLift2.ts, 0, 0))



const liftedStaticMap = lift(staticMap);
>liftedStaticMap : Symbol(liftedStaticMap, Decl(higherKindedTypesLift2.ts, 96, 5))
>lift : Symbol(lift, Decl(higherKindedTypesLift2.ts, 44, 1))
>staticMap : Symbol(staticMap, Decl(higherKindedTypesLift2.ts, 82, 5))

const liftedTestFunc = liftedStaticMap(testFunc);
>liftedTestFunc : Symbol(liftedTestFunc, Decl(higherKindedTypesLift2.ts, 97, 5))
>liftedStaticMap : Symbol(liftedStaticMap, Decl(higherKindedTypesLift2.ts, 96, 5))
>testFunc : Symbol(testFunc, Decl(higherKindedTypesLift2.ts, 6, 1))

const result = liftedTestFunc(fooObj);
>result : Symbol(result, Decl(higherKindedTypesLift2.ts, 98, 5))
>liftedTestFunc : Symbol(liftedTestFunc, Decl(higherKindedTypesLift2.ts, 97, 5))
>fooObj : Symbol(fooObj, Decl(higherKindedTypesLift2.ts, 92, 13))

const expectedType: FunctorFoo<EndVal> = result;
>expectedType : Symbol(expectedType, Decl(higherKindedTypesLift2.ts, 99, 5))
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>EndVal : Symbol(EndVal, Decl(higherKindedTypesLift2.ts, 2, 1))
>result : Symbol(result, Decl(higherKindedTypesLift2.ts, 98, 5))

const expectError = liftedTestFunc(result)
>expectError : Symbol(expectError, Decl(higherKindedTypesLift2.ts, 100, 5))
>liftedTestFunc : Symbol(liftedTestFunc, Decl(higherKindedTypesLift2.ts, 97, 5))
>result : Symbol(result, Decl(higherKindedTypesLift2.ts, 98, 5))


declare const declaredStaticFunctor: StaticFunctor<Functor, Functor>
>declaredStaticFunctor : Symbol(declaredStaticFunctor, Decl(higherKindedTypesLift2.ts, 103, 13))
>StaticFunctor : Symbol(StaticFunctor, Decl(higherKindedTypesLift2.ts, 32, 1))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))
>Functor : Symbol(Functor, Decl(higherKindedTypesLift2.ts, 23, 4))

const liftedDeclaredStaticFunctor = lift(declaredStaticFunctor);
>liftedDeclaredStaticFunctor : Symbol(liftedDeclaredStaticFunctor, Decl(higherKindedTypesLift2.ts, 104, 5))
>lift : Symbol(lift, Decl(higherKindedTypesLift2.ts, 44, 1))
>declaredStaticFunctor : Symbol(declaredStaticFunctor, Decl(higherKindedTypesLift2.ts, 103, 13))

const liftedDeclaredTestFunc = liftedDeclaredStaticFunctor(testFunc)
>liftedDeclaredTestFunc : Symbol(liftedDeclaredTestFunc, Decl(higherKindedTypesLift2.ts, 105, 5))
>liftedDeclaredStaticFunctor : Symbol(liftedDeclaredStaticFunctor, Decl(higherKindedTypesLift2.ts, 104, 5))
>testFunc : Symbol(testFunc, Decl(higherKindedTypesLift2.ts, 6, 1))

const declaredResult = liftedDeclaredTestFunc(fooObj);
>declaredResult : Symbol(declaredResult, Decl(higherKindedTypesLift2.ts, 106, 5))
>liftedDeclaredTestFunc : Symbol(liftedDeclaredTestFunc, Decl(higherKindedTypesLift2.ts, 105, 5))
>fooObj : Symbol(fooObj, Decl(higherKindedTypesLift2.ts, 92, 13))

const expectedTypeDeclared: FunctorFoo<EndVal> = declaredResult;
>expectedTypeDeclared : Symbol(expectedTypeDeclared, Decl(higherKindedTypesLift2.ts, 107, 5))
>FunctorFoo : Symbol(FunctorFoo, Decl(higherKindedTypesLift2.ts, 84, 182))
>EndVal : Symbol(EndVal, Decl(higherKindedTypesLift2.ts, 2, 1))
>declaredResult : Symbol(declaredResult, Decl(higherKindedTypesLift2.ts, 106, 5))

const expectErrorDeclared = liftedDeclaredTestFunc(declaredResult)
>expectErrorDeclared : Symbol(expectErrorDeclared, Decl(higherKindedTypesLift2.ts, 108, 5))
>liftedDeclaredTestFunc : Symbol(liftedDeclaredTestFunc, Decl(higherKindedTypesLift2.ts, 105, 5))
>declaredResult : Symbol(declaredResult, Decl(higherKindedTypesLift2.ts, 106, 5))

